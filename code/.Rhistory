library(RColorBrewer)
data <- dplyr::select(data, agegrp, density, bmi, cancer)
age_density_cancer <- data %>%
dplyr::group_by(agegrp, density) %>%
dplyr::summarise(cancer_rate = mean(cancer, na.rm = TRUE), .groups = 'drop')
ggplot(age_density_cancer, aes(x = factor(density), y = factor(agegrp), fill = cancer_rate)) +
geom_tile() +
scale_fill_gradientn(colors = brewer.pal(8, "BuGn")) +
labs(x = "Breast Density", y = "Age Group", title = "Cancer Rate by Age Group and Breast Density") +
theme_minimal()
library(GGally)
selected_data <- data %>% select(agegrp, density, bmi, cancer)
View(data)
ggplot(data, aes(x = factor(cancer), y = bmi, fill = factor(cancer))) +
geom_boxplot() +
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"), labels = c("No Cancer", "Cancer")) +
labs(x = "Cancer Status", y = "Body Mass Index (BMI)", title = "BMI Distribution by Cancer Status") +
theme_minimal()
ggplot(data, aes(x = density, y = factor(agegrp), fill = factor(agegrp))) +
geom_density_ridges_gradient(scale = 3, size = 0.3) +
scale_fill_brewer(palette = "Spectral") +
labs(x = "Breast Density", y = "Age Group", title = "Breast Density Distribution by Age Group") +
theme_ridges()
library(RColorBrewer)
library(dplyr)
library(ggridges)
library(RColorBrewer)
library(dplyr)
install.packages(ggridges)
library(ggridges)
library(RColorBrewer)
library(dplyr)
install.packages('ggridges')
library(ggridges)
ggplot(data, aes(x = density, y = factor(agegrp), fill = factor(agegrp))) +
geom_density_ridges_gradient(scale = 3, size = 0.3) +
scale_fill_brewer(palette = "Spectral") +
labs(x = "Breast Density", y = "Age Group", title = "Breast Density Distribution by Age Group") +
theme_ridges()
library(RColorBrewer)
library(dplyr)
library(ggridges)
ggplot(data, aes(x = density, y = factor(agegrp), fill = factor(agegrp))) +
geom_density_ridges_gradient(scale = 3, size = 0.3) +
scale_fill_brewer(palette = "Spectral") +
labs(x = "Breast Density", y = "Age Group", title = "Breast Density Distribution by Age Group") +
theme_ridges()
library(RColorBrewer)
library(dplyr)
library(ggridges)
data %>%
group_by(race, cancer) %>%
summarise(count = n(), .groups = 'drop') %>%
ggplot(aes(x = factor(race), y = count, fill = factor(cancer))) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"), labels = c("No Cancer", "Cancer")) +
labs(x = "Race", y = "Proportion", title = "Proportion of Cancer by Race") +
theme_minimal()
# Read the file
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
str(data)
# Check the first few rows of the dataset
head(data)
data <- as.numeric(as.character(data))
library(ggplot2)
ggplot(data, aes(x = factor(density), fill = factor(cancer))) +
geom_bar(position = "fill", color = "black") +
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"),
labels = c("Cancer", "No Cancer")) +
labs(x = "Breast Density", y = "Proportion", title = "The Relationship between Breast Density and Cancer Risk") +
theme_minimal()
# Read the file
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
str(data)
# Check the first few rows of the dataset
head(data)
data_numeric <- data %>%
mutate(across(everything(), as.numeric))
library(ggplot2)
ggplot(data, aes(x = factor(density), fill = factor(cancer))) +
geom_bar(position = "fill", color = "black") +
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"),
labels = c("Cancer", "No Cancer")) +
labs(x = "Breast Density", y = "Proportion", title = "The Relationship between Breast Density and Cancer Risk") +
theme_minimal()
library(RColorBrewer)
library(dplyr)
library(ggridges)
data %>%
group_by(race, cancer) %>%
summarise(count = n(), .groups = 'drop') %>%
ggplot(aes(x = factor(race), y = count, fill = factor(cancer))) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"), labels = c("No Cancer", "Cancer")) +
labs(x = "Race", y = "Proportion", title = "Proportion of Cancer by Race") +
theme_minimal()
library(RColorBrewer)
library(dplyr)
library(ggridges)
data %>%
group_by(race, cancer) %>%
summarise(count = n(), .groups = 'drop') %>%
ggplot(aes(x = factor(race), y = count, fill = factor(cancer))) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"), labels = c("No Cancer", "Cancer")) +
labs(x = "Race", y = "Proportion", title = "Proportion of Cancer by Race") +
theme_minimal()
data %>%
group_by(race, cancer) %>%
summarise(count = n(), .groups = 'drop') %>%
ggplot(aes(x = factor(race), y = count, fill = factor(cancer))) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"), labels = c("No Cancer", "Cancer")) +
labs(x = "Race", y = "Proportion", title = "Proportion of Cancer by Race") +
theme_minimal()
ggplot(data, aes(x = density, y = factor(agegrp), fill = factor(agegrp))) +
geom_density_ridges_gradient(scale = 3, size = 0.3) +
scale_fill_brewer(palette = "Spectral") +
labs(x = "Breast Density", y = "Age Group", title = "Breast Density Distribution by Age Group") +
theme_ridges()
ggplot(data, aes(x = density, y = agegrp, fill = agegrp)) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_brewer(palette = "Blues") +
labs(x = "Breast Density", y = "Age Group", title = "Breast Density Distribution by Age Group") +
theme_ridges(font_family = "sans", grid = FALSE) +
theme(legend.position = "none")  # 移除图例以减少干扰
data$agegrp <- as.factor(data$agegrp)
data$density <- as.numeric(data$density)
# 生成带状图，使用 'Blues' 色板
ggplot(data, aes(x = density, y = agegrp, fill = agegrp)) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_brewer(palette = "Blues") +
labs(x = "Breast Density", y = "Age Group", title = "Breast Density Distribution by Age Group") +
theme_ridges(font_family = "sans", grid = FALSE) +
theme(legend.position = "none")  # 移除图例以减少干扰
data$agegrp <- as.factor(data$agegrp)
data$density <- as.numeric(data$density)
# 生成带状图，使用 'Blues' 色板
ggplot(data, aes(x = density, y = agegrp, fill = agegrp)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_brewer(palette = "Blues") +
labs(x = "Breast Density", y = "Age Group", title = "Breast Density Distribution by Age Group") +
theme_ridges(font_family = "sans", grid = FALSE) +
theme(legend.position = "none")  # 移除图例以减少干扰
# Read the file
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
str(data)
# Check the first few rows of the dataset
head(data)
data_numeric <- data %>%
mutate(across(everything(), as.numeric))
library(corrplot)
numeric_data <- data %>%
select_if(is.numeric) %>%
na.omit()  # 移除任何NA值，因为NA值会影响相关性计算
# 计算相关矩阵
cor_matrix <- cor(numeric_data)
# 绘制热力图
corrplot::corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
addrect = 2, rect.col = "black",
cl.lim = c(-1, 1), cl.cex = 0.75, cl.ratio = 0.1,
title = "Correlation Matrix of Variables",
col = brewer.pal(n = 8, name = "RdBu"))
library(corrplot)
numeric_data_long <- gather(numeric_data, key = "Variable", value = "Value")
# 创建散点图矩阵
ggplot(data = numeric_data_long, aes(x = Variable, y = Value)) +
geom_jitter(alpha = 0.5, aes(color = Variable)) +
theme_minimal() +
theme(legend.position = "none",  # 移除图例以简化图形
axis.text.x = element_text(angle = 45, hjust = 1), # 旋转X轴文本以防重叠
plot.title = element_text(hjust = 0.5, face = "bold")) + # 居中标题
scale_color_brewer(palette = "Pastel1") + # 使用清新的配色方案
labs(title = "Scatter Plot Matrix of Numeric Variables")
library(corrplot)
library(RColorBrewer)
# 确保数据框中的所有变量都是数值型
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
# 计算相关矩阵
cor_matrix <- cor(data_numeric, use = "complete.obs")
# 绘制相关性热力图
corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
col = colorRampPalette(brewer.pal(n = 11, name = "RdYlBu"))(200),
title = "Correlation Matrix of Variables")
library(corrplot)
library(RColorBrewer)
# 确保数据框中的所有变量都是数值型
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
# 计算相关矩阵
cor_matrix <- cor(data_numeric, use = "complete.obs")
# 设置边界空间，尤其是顶部空间，防止标题和轴标签重叠
# mar = c(bottom, left, top, right)
corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
col = colorRampPalette(brewer.pal(n = 11, name = "RdYlBu"))(200),
title = "Correlation Matrix of Variables",
mar = c(0, 0, 2, 0))  # 增加顶部的空间
library(corrplot)
library(RColorBrewer)
# 确保数据框中的所有变量都是数值型
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
# 计算相关矩阵
cor_matrix <- cor(data_numeric, use = "complete.obs")
# 设置边界空间，增加顶部和底部的空间
# mar = c(bottom, left, top, right)
corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
col = colorRampPalette(brewer.pal(n = 11, name = "RdYlBu"))(200),
title = "Correlation Matrix of Variables",
mar = c(1, 0, 2, 0))  # 增加底部和顶部的空间
library(corrplot)
library(RColorBrewer)
# 确保数据框中的所有变量都是数值型
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
# 计算相关矩阵
cor_matrix <- cor(data_numeric, use = "complete.obs")
# 设置边界空间，增加顶部和底部的空间
mar = c(bottom, left, top, right)
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 1) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
library(corrplot)
library(RColorBrewer)
# 确保数据框中的所有变量都是数值型
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
# 计算相关矩阵
cor_matrix <- cor(data_numeric, use = "complete.obs")
# 绘制相关性热力图，确保调整边距以避免标签被遮挡
corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
col = colorRampPalette(brewer.pal(n = 11, name = "RdYlBu"))(200),
title = "Correlation Matrix of Variables",
mar = c(2, 2, 2, 2))  # 增加底部、左侧、顶部、右侧的边距
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 1) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
data$cancer <- as.numeric(as.character(data$cancer))
data$density <- as.numeric(as.character(data$density))
data$agegrp <- as.numeric(as.character(data$agegrp))
data$bmi <- as.numeric(as.character(data$bmi))
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 1) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
data$cancer <- as.numeric(as.character(data$cancer))
data$density <- as.numeric(as.character(data$density))
data$agegrp <- as.numeric(as.character(data$agegrp))
data$bmi <- as.numeric(as.character(data$bmi))
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 1) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 1) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 0.5) +
scale_color_manual(values = c("0" = "grey", "1" = "red"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
data$cancer <- as.numeric(as.character(data$cancer))
data$density <- as.numeric(as.character(data$density))
data$agegrp <- as.numeric(as.character(data$agegrp))
data$bmi <- as.numeric(as.character(data$bmi))
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 0.5) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(ggplot2)
install.packages('ggthemes')
library(ggthemes)
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
data$cancer <- as.numeric(as.character(data$cancer))
data$density <- as.numeric(as.character(data$density))
data$agegrp <- as.numeric(as.character(data$agegrp))
data$bmi <- as.numeric(as.character(data$bmi))
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 0.5) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
library(tidyverse)
library(ggplot2)
library(ggthemes)
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
ggplot(data, aes(x = bmi, y = agegrp, color = factor(cancer))) +
geom_jitter(alpha = 0.5) +
scale_color_manual(values = c("0" = "grey", "1" = "blue"), labels = c("No Cancer", "Cancer")) +
labs(x = "Body Mass Index (BMI)", y = "Age Group", color = "Cancer Status",
title = "Relationship Between BMI, Age, and Breast Cancer Status") +
theme_minimal()
library(ggplot2)
ggplot(data, aes(x = factor(density), fill = factor(cancer))) +
geom_bar(color = "black") +  # 移除 position="fill" 来显示计数而非比例
scale_fill_manual(values = c("0" = "grey", "1" = "#DD3333"),
labels = c("No Cancer", "Cancer")) +
labs(x = "Breast Density", y = "Count", title = "The Relationship between Breast Density and Cancer Risk") +
theme_minimal()
library(ggplot2)
data_summary <- data %>%
group_by(density) %>%
summarise(cancer_proportion = mean(as.numeric(as.character(cancer)), na.rm = TRUE)) %>%
ungroup()
# 然后，使用这个汇总数据绘制折线图
ggplot(data_summary, aes(x = factor(density), y = cancer_proportion, group = 1)) +
geom_line(color = "#DD3333") +
geom_point(color = "#DD3333") +  # 添加点以清晰显示每个密度级别
labs(x = "Breast Density", y = "Cancer Proportion",
title = "Cancer Proportion by Breast Density") +
theme_minimal()
library(RColorBrewer)
library(dplyr)
library(ggridges)
library(ggplot2)
library(dplyr)
# 首先，创建一个汇总数据框，计算每个种族和癌症状态组合的案例数量
race_summary <- data %>%
group_by(race, cancer) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(cancer = factor(cancer))
# 然后，使用这个汇总数据绘制折线图
ggplot(race_summary, aes(x = factor(race), y = count, color = factor(cancer), group = cancer)) +
geom_line() +
geom_point() +  # 添加点以清晰显示每个数据点
scale_color_manual(values = c("0" = "grey", "1" = "#DD3333"), labels = c("No Cancer", "Cancer")) +
labs(x = "Race", y = "Count", title = "Number of Cancer Cases by Race") +
theme_minimal()
library(ggplot2)
library(dplyr)
# 为乳腺密度计算有癌症的比例
density_cancer_rate <- data %>%
group_by(density) %>%
summarise(cancer_rate = mean(as.numeric(cancer)), .groups = 'drop')
# 为种族计算有癌症的比例
race_cancer_rate <- data %>%
group_by(race) %>%
summarise(cancer_rate = mean(as.numeric(cancer)), .groups = 'drop')
# 把数据转换为长格式以适用于折线图
long_data <- bind_rows(
mutate(density_cancer_rate, group = "Density"),
mutate(race_cancer_rate, group = "Race"),
.id = "source"
)
# 绘制折线图
ggplot(long_data, aes(x = factor(density), y = cancer_rate, color = group, group = group)) +
geom_line() +
geom_point() +
scale_color_manual(values = c("Density" = "#009E73", "Race" = "#0072B2")) +
labs(x = "Group (Breast Density/Race)", y = "Cancer Proportion",
title = "Proportion of Cancer by Breast Density and Race") +
theme_minimal()
selected_vars <- data %>% select(agegrp, bmi, density, cancer)
data <- read.csv("risk_estimation_clean.csv", header = TRUE)
# Read the file
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
str(data)
# Check the first few rows of the dataset
head(data)
data_numeric <- data %>%
mutate(across(everything(), as.numeric))
# 1. Correlation Heatmap
correlation_matrix <- cor(data[, c("agegrp", "density", "bmi", "cancer")], use = "complete.obs")
corrplot(correlation_matrix, method = "color", type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, addCoef.col = "black",
title = "Correlation Heatmap of Risk Factors with Cancer")
# Read the file
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
str(data)
# Check the first few rows of the dataset
head(data)
data_numeric <- data %>%
mutate(across(everything(), as.numeric))
View(data_numeric)
View(data_numeric)
library(corrplot)
library(RColorBrewer)
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
cor_matrix <- cor(data_numeric, use = "complete.obs")
corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
col = colorRampPalette(brewer.pal(n = 11, name = "RdYlBu"))(200),
title = "Correlation Matrix of Variables",
mar = c(2, 2, 2, 2))
library(corrplot)
library(RColorBrewer)
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
# 计算与"cancer"变量的相关性
correlations_with_cancer <- cor(data_numeric, use = "complete.obs")['cancer',]
significant_vars <- names(which(abs(correlations_with_cancer) > 0.1))
# 创建一个只包含相关性较高的变量的相关性矩阵
selected_data <- data_numeric[, significant_vars]
cor_matrix <- cor(selected_data, use = "complete.obs")
# 绘制热力图
corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
col = colorRampPalette(brewer.pal(n = 11, name = "RdYlBu"))(200),
title = "Correlation Matrix of Variables Related to Cancer",
mar = c(2, 2, 2, 2))
library(corrplot)
library(RColorBrewer)
data_numeric <- data %>%
mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
select_if(~ !any(is.na(.)))
# 计算与"cancer"变量的相关性
correlations_with_cancer <- cor(data_numeric, use = "complete.obs")['cancer',]
significant_vars <- names(which(abs(correlations_with_cancer) > 0.01))
# 创建一个只包含相关性较高的变量的相关性矩阵
selected_data <- data_numeric[, significant_vars]
cor_matrix <- cor(selected_data, use = "complete.obs")
# 绘制热力图
corrplot(cor_matrix, method = "color", type = "upper",
order = "hclust", tl.col = "black", tl.srt = 45,
col = colorRampPalette(brewer.pal(n = 11, name = "RdYlBu"))(200),
title = "Correlation Matrix of Variables Related to Cancer",
mar = c(2, 2, 2, 2))
# Read the file
data <- read.csv('../dataset/risk_estimation_clean.csv', header = TRUE)
str(data)
# Check the first few rows of the dataset
head(data)
library(corrplot)
library(RColorBrewer)
data <- select(data, -count)
library(RColorBrewer)
library(dplyr)
library(ggridges)
library(ggplot2)
library(GGally)
data <- read.csv("/path/to/risk_estimation_clean.csv", header = TRUE)
library(RColorBrewer)
library(dplyr)
library(ggridges)
library(ggplot2)
library(GGally)
data <- data %>%
mutate(across(everything(), as.numeric),
cancer = factor(cancer))
# 移除'count'列
data <- select(data, -count)
library(RColorBrewer)
library(dplyr)
library(ggridges)
library(ggplot2)
library(GGally)
data <- data %>%
mutate(across(everything(), as.numeric),
cancer = factor(cancer))
# 移除'count'列
data <- data %>% select(-count)
library(RColorBrewer)
library(dplyr)
library(ggridges)
library(ggplot2)
library(GGally)
data <- data %>%
mutate(across(everything(), as.numeric),
cancer = factor(cancer))
# 使用GGally包创建散点图矩阵
ggpairs(data, columns = 1:ncol(data), aes(color = cancer),
title = "Scatterplot Matrix with Fitted Lines")
library(RColorBrewer)
library(dplyr)
library(ggridges)
library(ggplot2)
library(GGally)
data <- data %>%
mutate(across(everything(), as.numeric),
cancer = factor(cancer))
# 使用GGally包创建散点图矩阵
ggpairs(data, columns = 1:ncol(data), aes(color = cancer),
title = "Scatterplot Matrix with Fitted Lines")
